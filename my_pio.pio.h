// -------------------------------------------------- //
// This file is autogenerated by pioasm; do not edit! //
// -------------------------------------------------- //

#pragma once

#if !PICO_NO_HARDWARE
#include "hardware/pio.h"
#endif

// ---- //
// save //
// ---- //

#define save_wrap_target 0
#define save_wrap 16

#define save_offset_inmode 0u
#define save_offset_outmode 6u

static const uint16_t save_program_instructions[] = {
            //     .wrap_target
    0xe080, //  0: set    pindirs, 0                 
    0x3f20, //  1: wait   0 pin, 0               [31]
    0xbf42, //  2: nop                           [31]
    0x4001, //  3: in     pins, 1                    
    0x20a0, //  4: wait   1 pin, 0                   
    0x0001, //  5: jmp    1                          
    0xe001, //  6: set    pins, 1                    
    0xe081, //  7: set    pindirs, 1                 
    0x80e0, //  8: pull   ifempty block              
    0x6021, //  9: out    x, 1                       
    0x6041, // 10: out    y, 1                       
    0x0060, // 11: jmp    !y, 0                      
    0xf800, // 12: set    pins, 0                [24]
    0xb801, // 13: mov    pins, x                [24]
    0xb801, // 14: mov    pins, x                [24]
    0xf301, // 15: set    pins, 1                [19]
    0x0008, // 16: jmp    8                          
            //     .wrap
};

#if !PICO_NO_HARDWARE
static const struct pio_program save_program = {
    .instructions = save_program_instructions,
    .length = 17,
    .origin = -1,
};

static inline pio_sm_config save_program_get_default_config(uint offset) {
    pio_sm_config c = pio_get_default_sm_config();
    sm_config_set_wrap(&c, offset + save_wrap_target, offset + save_wrap);
    return c;
}
#endif

